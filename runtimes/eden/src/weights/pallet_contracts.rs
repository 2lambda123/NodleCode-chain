/*
 * This file is part of the Nodle Chain distributed at https://github.com/NodleCode/chain
 * Copyright (C) 2020-2022  Nodle International
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-06, STEPS: `4`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `tama`, CPU: `11th Gen Intel(R) Core(TM) i7-11700 @ 2.50GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/nodle-parachain
// benchmark
// pallet
// --chain=dev
// --steps=4
// --repeat=5
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --template=./.maintain/external_pallet_weights.hbs
// --output=runtimes/eden/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use core::marker::PhantomData;

/// Weight functions for `pallet_contracts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
	// Storage: Contracts DeletionQueueCounter (r:1 w:0)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	fn on_process_deletion_queue_batch() -> Weight {
		// Minimum execution time: 4_242 nanoseconds.
		Weight::from_parts(4_441_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Minimum execution time: 21_654 nanoseconds.
		Weight::from_parts(30_963_122_u64, 0)
			// Standard Error: 8_261
			.saturating_add(Weight::from_parts(1_138_781_u64, 0).saturating_mul(k as u64))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(k as u64)))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k as u64)))
	}
	// Storage: Contracts PristineCode (r:1 w:0)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn reinstrument(c: u32, ) -> Weight {
		// Minimum execution time: 49_530 nanoseconds.
		Weight::from_parts(82_418_920_u64, 0)
			// Standard Error: 661
			.saturating_add(Weight::from_parts(58_746_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Minimum execution time: 380_518 nanoseconds.
		Weight::from_parts(407_991_966_u64, 0)
			// Standard Error: 162
			.saturating_add(Weight::from_parts(41_175_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 4_455_696 nanoseconds.
		Weight::from_parts(589_905_284_u64, 0)
			// Standard Error: 2_152
			.saturating_add(Weight::from_parts(112_651_u64, 0).saturating_mul(c as u64))
			// Standard Error: 126
			.saturating_add(Weight::from_parts(1_778_u64, 0).saturating_mul(i as u64))
			// Standard Error: 126
			.saturating_add(Weight::from_parts(1_996_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 2_201_571 nanoseconds.
		Weight::from_parts(738_398_498_u64, 0)
			// Standard Error: 77
			.saturating_add(Weight::from_parts(1_459_u64, 0).saturating_mul(i as u64))
			// Standard Error: 77
			.saturating_add(Weight::from_parts(1_602_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn call() -> Weight {
		// Minimum execution time: 263_668 nanoseconds.
		Weight::from_parts(266_604_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn upload_code(c: u32, ) -> Weight {
		// Minimum execution time: 319_214 nanoseconds.
		Weight::from_parts(337_651_344_u64, 0)
			// Standard Error: 645
			.saturating_add(Weight::from_parts(109_565_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	fn remove_code() -> Weight {
		// Minimum execution time: 47_601 nanoseconds.
		Weight::from_parts(48_094_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:2 w:2)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn set_code() -> Weight {
		// Minimum execution time: 45_852 nanoseconds.
		Weight::from_parts(46_759_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Minimum execution time: 303_377 nanoseconds.
		Weight::from_parts(314_631_915_u64, 0)
			// Standard Error: 4_104
			.saturating_add(Weight::from_parts(423_039_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Minimum execution time: 304_360 nanoseconds.
		Weight::from_parts(254_717_256_u64, 0)
			// Standard Error: 28_926
			.saturating_add(Weight::from_parts(3_879_234_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 295_410 nanoseconds.
		Weight::from_parts(238_191_797_u64, 0)
			// Standard Error: 37_861
			.saturating_add(Weight::from_parts(4_924_744_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 293_683 nanoseconds.
		Weight::from_parts(298_774_434_u64, 0)
			// Standard Error: 3_207
			.saturating_add(Weight::from_parts(532_498_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Minimum execution time: 285_967 nanoseconds.
		Weight::from_parts(292_353_821_u64, 0)
			// Standard Error: 1_319
			.saturating_add(Weight::from_parts(160_856_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Minimum execution time: 290_358 nanoseconds.
		Weight::from_parts(301_372_243_u64, 0)
			// Standard Error: 5_305
			.saturating_add(Weight::from_parts(401_330_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Minimum execution time: 285_978 nanoseconds.
		Weight::from_parts(288_388_715_u64, 0)
			// Standard Error: 3_765
			.saturating_add(Weight::from_parts(713_154_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:2 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Minimum execution time: 289_194 nanoseconds.
		Weight::from_parts(303_722_294_u64, 0)
			// Standard Error: 20_850
			.saturating_add(Weight::from_parts(2_042_965_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Minimum execution time: 288_132 nanoseconds.
		Weight::from_parts(296_626_390_u64, 0)
			// Standard Error: 3_392
			.saturating_add(Weight::from_parts(403_231_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Minimum execution time: 288_264 nanoseconds.
		Weight::from_parts(294_708_726_u64, 0)
			// Standard Error: 4_263
			.saturating_add(Weight::from_parts(408_440_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Minimum execution time: 289_688 nanoseconds.
		Weight::from_parts(293_062_253_u64, 0)
			// Standard Error: 1_906
			.saturating_add(Weight::from_parts(402_061_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Minimum execution time: 291_263 nanoseconds.
		Weight::from_parts(291_871_929_u64, 0)
			// Standard Error: 3_392
			.saturating_add(Weight::from_parts(413_110_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
	// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Minimum execution time: 290_441 nanoseconds.
		Weight::from_parts(323_451_924_u64, 0)
			// Standard Error: 22_605
			.saturating_add(Weight::from_parts(1_727_701_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas(r: u32, ) -> Weight {
		// Minimum execution time: 211_500 nanoseconds.
		Weight::from_parts(218_413_705_u64, 0)
			// Standard Error: 2_539
			.saturating_add(Weight::from_parts(130_322_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Minimum execution time: 288_276 nanoseconds.
		Weight::from_parts(300_072_843_u64, 0)
			// Standard Error: 2_526
			.saturating_add(Weight::from_parts(322_187_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 289_173 nanoseconds.
		Weight::from_parts(270_893_761_u64, 0)
			// Standard Error: 55
			.saturating_add(Weight::from_parts(625_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Minimum execution time: 282_581 nanoseconds.
		Weight::from_parts(288_525_222_u64, 0)
			// Standard Error: 4_170_334
			.saturating_add(Weight::from_parts(14_828_444_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 293_571 nanoseconds.
		Weight::from_parts(293_569_828_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(166_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueueCounter (r:1 w:1)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueue (r:0 w:1)
	// Proof: Contracts DeletionQueue (max_values: None, max_size: Some(142), added: 2617, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Minimum execution time: 281_027 nanoseconds.
		Weight::from_parts(286_174_555_u64, 0)
			// Standard Error: 3_829_443
			.saturating_add(Weight::from_parts(170_035_777_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Minimum execution time: 282_594 nanoseconds.
		Weight::from_parts(301_065_580_u64, 0)
			// Standard Error: 8_278
			.saturating_add(Weight::from_parts(2_463_834_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Minimum execution time: 277_990 nanoseconds.
		Weight::from_parts(307_543_532_u64, 0)
			// Standard Error: 12_413
			.saturating_add(Weight::from_parts(4_943_868_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:6 w:6)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Minimum execution time: 302_454 nanoseconds.
		Weight::from_parts(300_795_194_u64, 0)
			// Standard Error: 675_491
			.saturating_add(Weight::from_parts(1_483_505_u64, 0).saturating_mul(t as u64))
			// Standard Error: 174
			.saturating_add(Weight::from_parts(875_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Minimum execution time: 210_338 nanoseconds.
		Weight::from_parts(219_609_373_u64, 0)
			// Standard Error: 3_120
			.saturating_add(Weight::from_parts(213_468_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: MaxEncodedLen)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: MaxEncodedLen)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Minimum execution time: 387_999 nanoseconds.
		Weight::from_parts(428_374_908_u64, 0)
			// Standard Error: 56
			.saturating_add(Weight::from_parts(639_u64, 0).saturating_mul(i as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Minimum execution time: 277_510 nanoseconds.
		Weight::from_parts(238_610_034_u64, 0)
			// Standard Error: 41_760
			.saturating_add(Weight::from_parts(6_071_336_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Minimum execution time: 296_592 nanoseconds.
		Weight::from_parts(309_366_694_u64, 0)
			// Standard Error: 761
			.saturating_add(Weight::from_parts(3_553_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Minimum execution time: 295_220 nanoseconds.
		Weight::from_parts(300_922_655_u64, 0)
			// Standard Error: 155
			.saturating_add(Weight::from_parts(19_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Minimum execution time: 281_800 nanoseconds.
		Weight::from_parts(254_396_094_u64, 0)
			// Standard Error: 44_947
			.saturating_add(Weight::from_parts(5_913_720_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 287_104 nanoseconds.
		Weight::from_parts(291_800_749_u64, 0)
			// Standard Error: 179
			.saturating_add(Weight::from_parts(454_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Minimum execution time: 274_731 nanoseconds.
		Weight::from_parts(227_685_674_u64, 0)
			// Standard Error: 61_372
			.saturating_add(Weight::from_parts(5_043_049_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 289_685 nanoseconds.
		Weight::from_parts(298_720_160_u64, 0)
			// Standard Error: 1_301
			.saturating_add(Weight::from_parts(937_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Minimum execution time: 271_796 nanoseconds.
		Weight::from_parts(239_467_691_u64, 0)
			// Standard Error: 36_811
			.saturating_add(Weight::from_parts(4_822_906_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 278_840 nanoseconds.
		Weight::from_parts(283_572_411_u64, 0)
			// Standard Error: 212
			.saturating_add(Weight::from_parts(283_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Minimum execution time: 265_881 nanoseconds.
		Weight::from_parts(232_185_873_u64, 0)
			// Standard Error: 40_813
			.saturating_add(Weight::from_parts(5_830_556_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 283_638 nanoseconds.
		Weight::from_parts(290_184_026_u64, 0)
			// Standard Error: 303
			.saturating_add(Weight::from_parts(580_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: System Account (r:1602 w:1601)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Minimum execution time: 266_342 nanoseconds.
		Weight::from_parts(775_857_317_u64, 0)
			// Standard Error: 305_739
			.saturating_add(Weight::from_parts(43_675_807_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Minimum execution time: 248_870 nanoseconds.
		Weight::from_parts(251_840_000_u64, 0)
			// Standard Error: 701_198
			.saturating_add(Weight::from_parts(219_314_368_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:736 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:737 w:737)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Minimum execution time: 249_696 nanoseconds.
		Weight::from_parts(249_966_000_u64, 0)
			// Standard Error: 462_259
			.saturating_add(Weight::from_parts(214_276_403_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:3 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Minimum execution time: 450_007 nanoseconds.
		Weight::from_parts(461_111_198_u64, 0)
			// Standard Error: 93
			.saturating_add(Weight::from_parts(493_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1602 w:1602)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:801 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:800 w:800)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Minimum execution time: 619_247 nanoseconds.
		Weight::from_parts(623_581_000_u64, 0)
			// Standard Error: 1_260_787
			.saturating_add(Weight::from_parts(365_511_583_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((5_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 1_699_406 nanoseconds.
		Weight::from_parts(695_240_666_u64, 0)
			// Standard Error: 55
			.saturating_add(Weight::from_parts(1_137_u64, 0).saturating_mul(i as u64))
			// Standard Error: 55
			.saturating_add(Weight::from_parts(1_208_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(12_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Minimum execution time: 244_994 nanoseconds.
		Weight::from_parts(256_606_134_u64, 0)
			// Standard Error: 7_636
			.saturating_add(Weight::from_parts(369_762_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 246_841 nanoseconds.
		Weight::from_parts(210_861_142_u64, 0)
			// Standard Error: 54
			.saturating_add(Weight::from_parts(1_007_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Minimum execution time: 242_905 nanoseconds.
		Weight::from_parts(246_525_064_u64, 0)
			// Standard Error: 11_422
			.saturating_add(Weight::from_parts(695_426_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 249_455 nanoseconds.
		Weight::from_parts(226_906_030_u64, 0)
			// Standard Error: 41
			.saturating_add(Weight::from_parts(2_697_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Minimum execution time: 248_171 nanoseconds.
		Weight::from_parts(256_930_623_u64, 0)
			// Standard Error: 5_463
			.saturating_add(Weight::from_parts(417_811_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 258_263 nanoseconds.
		Weight::from_parts(278_826_558_u64, 0)
			// Standard Error: 38
			.saturating_add(Weight::from_parts(1_043_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Minimum execution time: 246_009 nanoseconds.
		Weight::from_parts(284_750_605_u64, 0)
			// Standard Error: 7_814
			.saturating_add(Weight::from_parts(392_032_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 247_033 nanoseconds.
		Weight::from_parts(206_752_278_u64, 0)
			// Standard Error: 47
			.saturating_add(Weight::from_parts(1_223_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 301_020 nanoseconds.
		Weight::from_parts(333_997_933_u64, 0)
			// Standard Error: 84
			.saturating_add(Weight::from_parts(3_505_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Minimum execution time: 250_393 nanoseconds.
		Weight::from_parts(268_887_570_u64, 0)
			// Standard Error: 69_579
			.saturating_add(Weight::from_parts(39_513_737_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Minimum execution time: 248_903 nanoseconds.
		Weight::from_parts(272_353_466_u64, 0)
			// Standard Error: 146_693
			.saturating_add(Weight::from_parts(31_614_062_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Minimum execution time: 251_913 nanoseconds.
		Weight::from_parts(260_549_302_u64, 0)
			// Standard Error: 67_514
			.saturating_add(Weight::from_parts(8_254_631_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1536 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1538 w:1538)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 251_255 nanoseconds.
		Weight::from_parts(252_209_000_u64, 0)
			// Standard Error: 205_170
			.saturating_add(Weight::from_parts(22_158_932_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 244_291 nanoseconds.
		Weight::from_parts(263_386_591_u64, 0)
			// Standard Error: 9_330
			.saturating_add(Weight::from_parts(141_059_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 258_792 nanoseconds.
		Weight::from_parts(295_916_910_u64, 0)
			// Standard Error: 9_741
			.saturating_add(Weight::from_parts(234_095_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Minimum execution time: 244_445 nanoseconds.
		Weight::from_parts(254_696_993_u64, 0)
			// Standard Error: 7_149
			.saturating_add(Weight::from_parts(126_112_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64const(r: u32, ) -> Weight {
		// Minimum execution time: 2_216 nanoseconds.
		Weight::from_parts(2_586_445_u64, 0)
			// Standard Error: 84
			.saturating_add(Weight::from_parts(1_767_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64load(r: u32, ) -> Weight {
		// Minimum execution time: 2_239 nanoseconds.
		Weight::from_parts(2_107_107_u64, 0)
			// Standard Error: 209
			.saturating_add(Weight::from_parts(4_926_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64store(r: u32, ) -> Weight {
		// Minimum execution time: 2_339 nanoseconds.
		Weight::from_parts(870_839_u64, 0)
			// Standard Error: 1_849
			.saturating_add(Weight::from_parts(8_737_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_select(r: u32, ) -> Weight {
		// Minimum execution time: 1_960 nanoseconds.
		Weight::from_parts(3_220_484_u64, 0)
			// Standard Error: 765
			.saturating_add(Weight::from_parts(8_213_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_if(r: u32, ) -> Weight {
		// Minimum execution time: 2_016 nanoseconds.
		Weight::from_parts(3_842_771_u64, 0)
			// Standard Error: 1_031
			.saturating_add(Weight::from_parts(9_724_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br(r: u32, ) -> Weight {
		// Minimum execution time: 2_115 nanoseconds.
		Weight::from_parts(8_916_455_u64, 0)
			// Standard Error: 1_702
			.saturating_add(Weight::from_parts(3_223_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_if(r: u32, ) -> Weight {
		// Minimum execution time: 2_823 nanoseconds.
		Weight::from_parts(10_821_831_u64, 0)
			// Standard Error: 2_393
			.saturating_add(Weight::from_parts(6_724_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_table(r: u32, ) -> Weight {
		// Minimum execution time: 1_975 nanoseconds.
		Weight::from_parts(2_218_763_u64, 0)
			// Standard Error: 1_029
			.saturating_add(Weight::from_parts(11_460_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `e` is `[1, 256]`.
	fn instr_br_table_per_entry(_e: u32, ) -> Weight {
		// Minimum execution time: 2_120 nanoseconds.
		Weight::from_parts(2_325_383_u64, 0)
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call(r: u32, ) -> Weight {
		// Minimum execution time: 2_098 nanoseconds.
		Weight::from_parts(2_353_158_u64, 0)
			// Standard Error: 136
			.saturating_add(Weight::from_parts(12_202_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call_indirect(r: u32, ) -> Weight {
		// Minimum execution time: 2_448 nanoseconds.
		Weight::from_parts(3_805_436_u64, 0)
			// Standard Error: 780
			.saturating_add(Weight::from_parts(19_192_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `l` is `[0, 1024]`.
	fn instr_call_per_local(l: u32, ) -> Weight {
		// Minimum execution time: 2_205 nanoseconds.
		Weight::from_parts(2_556_421_u64, 0)
			// Standard Error: 263
			.saturating_add(Weight::from_parts(1_112_u64, 0).saturating_mul(l as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_get(r: u32, ) -> Weight {
		// Minimum execution time: 3_233 nanoseconds.
		Weight::from_parts(2_915_278_u64, 0)
			// Standard Error: 246
			.saturating_add(Weight::from_parts(2_475_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_set(r: u32, ) -> Weight {
		// Minimum execution time: 3_187 nanoseconds.
		Weight::from_parts(3_856_254_u64, 0)
			// Standard Error: 354
			.saturating_add(Weight::from_parts(2_584_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_tee(r: u32, ) -> Weight {
		// Minimum execution time: 3_240 nanoseconds.
		Weight::from_parts(2_659_045_u64, 0)
			// Standard Error: 290
			.saturating_add(Weight::from_parts(4_100_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_get(r: u32, ) -> Weight {
		// Minimum execution time: 2_488 nanoseconds.
		Weight::from_parts(3_337_198_u64, 0)
			// Standard Error: 124
			.saturating_add(Weight::from_parts(5_882_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_set(r: u32, ) -> Weight {
		// Minimum execution time: 2_476 nanoseconds.
		Weight::from_parts(1_671_660_u64, 0)
			// Standard Error: 692
			.saturating_add(Weight::from_parts(7_802_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_memory_current(r: u32, ) -> Weight {
		// Minimum execution time: 2_218 nanoseconds.
		Weight::from_parts(2_334_838_u64, 0)
			// Standard Error: 287
			.saturating_add(Weight::from_parts(3_973_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 16]`.
	fn instr_memory_grow(r: u32, ) -> Weight {
		// Minimum execution time: 2_047 nanoseconds.
		Weight::from_parts(14_520_702_u64, 0)
			// Standard Error: 823_503
			.saturating_add(Weight::from_parts(9_568_511_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64clz(r: u32, ) -> Weight {
		// Minimum execution time: 2_150 nanoseconds.
		Weight::from_parts(3_008_932_u64, 0)
			// Standard Error: 459
			.saturating_add(Weight::from_parts(3_440_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ctz(r: u32, ) -> Weight {
		// Minimum execution time: 2_078 nanoseconds.
		Weight::from_parts(1_797_876_u64, 0)
			// Standard Error: 159
			.saturating_add(Weight::from_parts(3_394_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64popcnt(r: u32, ) -> Weight {
		// Minimum execution time: 1_944 nanoseconds.
		Weight::from_parts(1_115_058_u64, 0)
			// Standard Error: 388
			.saturating_add(Weight::from_parts(3_757_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eqz(r: u32, ) -> Weight {
		// Minimum execution time: 1_987 nanoseconds.
		Weight::from_parts(4_104_295_u64, 0)
			// Standard Error: 1_249
			.saturating_add(Weight::from_parts(4_301_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendsi32(r: u32, ) -> Weight {
		// Minimum execution time: 1_981 nanoseconds.
		Weight::from_parts(1_175_961_u64, 0)
			// Standard Error: 357
			.saturating_add(Weight::from_parts(3_721_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendui32(r: u32, ) -> Weight {
		// Minimum execution time: 1_937 nanoseconds.
		Weight::from_parts(2_012_379_u64, 0)
			// Standard Error: 452
			.saturating_add(Weight::from_parts(3_727_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i32wrapi64(r: u32, ) -> Weight {
		// Minimum execution time: 1_971 nanoseconds.
		Weight::from_parts(2_612_262_u64, 0)
			// Standard Error: 252
			.saturating_add(Weight::from_parts(3_535_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eq(r: u32, ) -> Weight {
		// Minimum execution time: 1_988 nanoseconds.
		Weight::from_parts(1_401_920_u64, 0)
			// Standard Error: 434
			.saturating_add(Weight::from_parts(6_193_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ne(r: u32, ) -> Weight {
		// Minimum execution time: 2_029 nanoseconds.
		Weight::from_parts(2_038_000_u64, 0)
			// Standard Error: 905
			.saturating_add(Weight::from_parts(7_508_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64lts(r: u32, ) -> Weight {
		// Minimum execution time: 2_047 nanoseconds.
		Weight::from_parts(1_175_732_u64, 0)
			// Standard Error: 328
			.saturating_add(Weight::from_parts(6_443_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ltu(r: u32, ) -> Weight {
		// Minimum execution time: 2_028 nanoseconds.
		Weight::from_parts(2_520_116_u64, 0)
			// Standard Error: 1_395
			.saturating_add(Weight::from_parts(7_355_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gts(r: u32, ) -> Weight {
		// Minimum execution time: 1_920 nanoseconds.
		Weight::from_parts(1_950_000_u64, 0)
			// Standard Error: 364
			.saturating_add(Weight::from_parts(7_114_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gtu(r: u32, ) -> Weight {
		// Minimum execution time: 2_109 nanoseconds.
		Weight::from_parts(4_791_310_u64, 0)
			// Standard Error: 1_705
			.saturating_add(Weight::from_parts(6_525_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64les(r: u32, ) -> Weight {
		// Minimum execution time: 2_003 nanoseconds.
		Weight::from_parts(1_661_558_u64, 0)
			// Standard Error: 482
			.saturating_add(Weight::from_parts(6_854_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64leu(r: u32, ) -> Weight {
		// Minimum execution time: 2_254 nanoseconds.
		Weight::from_parts(2_443_774_u64, 0)
			// Standard Error: 394
			.saturating_add(Weight::from_parts(6_633_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ges(r: u32, ) -> Weight {
		// Minimum execution time: 2_110 nanoseconds.
		Weight::from_parts(2_094_212_u64, 0)
			// Standard Error: 309
			.saturating_add(Weight::from_parts(6_051_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64geu(r: u32, ) -> Weight {
		// Minimum execution time: 1_983 nanoseconds.
		Weight::from_parts(1_467_323_u64, 0)
			// Standard Error: 693
			.saturating_add(Weight::from_parts(5_694_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64add(r: u32, ) -> Weight {
		// Minimum execution time: 2_023 nanoseconds.
		Weight::from_parts(1_242_438_u64, 0)
			// Standard Error: 346
			.saturating_add(Weight::from_parts(6_999_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64sub(r: u32, ) -> Weight {
		// Minimum execution time: 2_040 nanoseconds.
		Weight::from_parts(1_681_255_u64, 0)
			// Standard Error: 574
			.saturating_add(Weight::from_parts(7_274_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64mul(r: u32, ) -> Weight {
		// Minimum execution time: 2_093 nanoseconds.
		Weight::from_parts(2_187_808_u64, 0)
			// Standard Error: 375
			.saturating_add(Weight::from_parts(7_010_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divs(r: u32, ) -> Weight {
		// Minimum execution time: 2_033 nanoseconds.
		Weight::from_parts(1_501_707_u64, 0)
			// Standard Error: 254
			.saturating_add(Weight::from_parts(7_086_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divu(r: u32, ) -> Weight {
		// Minimum execution time: 2_454 nanoseconds.
		Weight::from_parts(3_330_174_u64, 0)
			// Standard Error: 343
			.saturating_add(Weight::from_parts(5_777_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rems(r: u32, ) -> Weight {
		// Minimum execution time: 2_024 nanoseconds.
		Weight::from_parts(855_193_u64, 0)
			// Standard Error: 344
			.saturating_add(Weight::from_parts(7_041_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64remu(r: u32, ) -> Weight {
		// Minimum execution time: 1_967 nanoseconds.
		Weight::from_parts(2_716_136_u64, 0)
			// Standard Error: 162
			.saturating_add(Weight::from_parts(5_376_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64and(r: u32, ) -> Weight {
		// Minimum execution time: 2_001 nanoseconds.
		Weight::from_parts(1_372_971_u64, 0)
			// Standard Error: 456
			.saturating_add(Weight::from_parts(6_875_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64or(r: u32, ) -> Weight {
		// Minimum execution time: 1_989 nanoseconds.
		Weight::from_parts(2_705_917_u64, 0)
			// Standard Error: 305
			.saturating_add(Weight::from_parts(5_714_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64xor(r: u32, ) -> Weight {
		// Minimum execution time: 1_962 nanoseconds.
		Weight::from_parts(1_361_207_u64, 0)
			// Standard Error: 201
			.saturating_add(Weight::from_parts(6_050_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shl(r: u32, ) -> Weight {
		// Minimum execution time: 1_998 nanoseconds.
		Weight::from_parts(3_894_716_u64, 0)
			// Standard Error: 473
			.saturating_add(Weight::from_parts(5_517_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shrs(r: u32, ) -> Weight {
		// Minimum execution time: 1_993 nanoseconds.
		Weight::from_parts(1_800_496_u64, 0)
			// Standard Error: 268
			.saturating_add(Weight::from_parts(6_402_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shru(r: u32, ) -> Weight {
		// Minimum execution time: 1_993 nanoseconds.
		Weight::from_parts(2_491_862_u64, 0)
			// Standard Error: 923
			.saturating_add(Weight::from_parts(7_277_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotl(r: u32, ) -> Weight {
		// Minimum execution time: 2_132 nanoseconds.
		Weight::from_parts(2_200_000_u64, 0)
			// Standard Error: 392
			.saturating_add(Weight::from_parts(7_884_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotr(r: u32, ) -> Weight {
		// Minimum execution time: 1_929 nanoseconds.
		Weight::from_parts(6_221_087_u64, 0)
			// Standard Error: 1_931
			.saturating_add(Weight::from_parts(6_368_u64, 0).saturating_mul(r as u64))
	}
}
