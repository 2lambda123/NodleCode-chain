name: Test rust code

on: [push]

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain: [nightly, stable]

    steps:
    - uses: actions/checkout@v2

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install ${{ matrix.toolchain }} toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Install WASM toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        target: wasm32-unknown-unknown

    - name: Install ubuntu native dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev

    - name: Install mac os native dependencies
      if: matrix.os == 'macos-latest'
      run: brew install openssl cmake llvm

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-targets --all-features --workspace

  lints:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt

    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
