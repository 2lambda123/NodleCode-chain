name: Test rust code

on: [push, pull_request]

env:
  nightly: nightly-2021-11-01
  target: "wasm32-unknown-unknown"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.nightly }}
        override: true

    - name: Install ubuntu native dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev

    - name: Install cargo-tarpaulin
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: 'cargo-tarpaulin --version 0.18.4'

    - name: Generate coverage report
      run: |
        cargo \
        +${{ env.nightly }} \
        tarpaulin \
        --avoid-cfg-tarpaulin \
        --verbose \
        --all-features \
        --workspace \
        --timeout 120 \
        --out Xml

    - name: Upload to Codecov
      uses: codecov/codecov-action@v2.0.3
      with:
        fail_ci_if_error: true

    # - name: Run tests
    #   run: SKIP_WASM_BUILD= cargo test --all-targets --all-features --workspace

  fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup toolchain
      run: ./scripts/init.sh

    - name: Install rustfmt
      run: rustup component add rustfmt

    - name: Run cargo fmt
      run: cargo fmt --all -- --check