(function() {var implementors = {};
implementors["nodle_main"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nodle_main/chain_spec/struct.Extensions.html\" title=\"struct nodle_main::chain_spec::Extensions\">Extensions</a>","synthetic":false,"types":["nodle_main::chain_spec::Extensions"]}];
implementors["nodle_parachain"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nodle_parachain/chain_spec/struct.Extensions.html\" title=\"struct nodle_parachain::chain_spec::Extensions\">Extensions</a>","synthetic":false,"types":["nodle_parachain::chain_spec::Extensions"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nodle_parachain/chain_spec/struct.ExtensionsFork.html\" title=\"struct nodle_parachain::chain_spec::ExtensionsFork\">ExtensionsFork</a>","synthetic":false,"types":["nodle_parachain::chain_spec::ExtensionsFork"]}];
implementors["nodle_staking"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nodle_staking/chain_spec/struct.Extensions.html\" title=\"struct nodle_staking::chain_spec::Extensions\">Extensions</a>","synthetic":false,"types":["nodle_staking::chain_spec::Extensions"]}];
implementors["pallet_grants"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_grants/pallet/trait.Config.html\" title=\"trait pallet_grants::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"pallet_grants/pallet/struct.GenesisConfig.html\" title=\"struct pallet_grants::pallet::GenesisConfig\">GenesisConfig</a>&lt;T&gt;","synthetic":false,"types":["pallet_grants::pallet::GenesisConfig"]}];
implementors["pallet_reserve"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_reserve/pallet/trait.Config.html\" title=\"trait pallet_reserve::pallet::Config\">Config</a>&lt;I&gt;, I:&nbsp;'static&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"pallet_reserve/pallet/struct.GenesisConfig.html\" title=\"struct pallet_reserve::pallet::GenesisConfig\">GenesisConfig</a>&lt;T, I&gt;","synthetic":false,"types":["pallet_reserve::pallet::GenesisConfig"]}];
implementors["pallet_staking"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_staking/pallet/trait.Config.html\" title=\"trait pallet_staking::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"pallet_staking/pallet/struct.GenesisConfig.html\" title=\"struct pallet_staking::pallet::GenesisConfig\">GenesisConfig</a>&lt;T&gt;","synthetic":false,"types":["pallet_staking::pallet::GenesisConfig"]}];
implementors["pallet_wnodl"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_wnodl/pallet/trait.Config.html\" title=\"trait pallet_wnodl::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"pallet_wnodl/pallet/struct.GenesisConfig.html\" title=\"struct pallet_wnodl::pallet::GenesisConfig\">GenesisConfig</a>&lt;T&gt;","synthetic":false,"types":["pallet_wnodl::pallet::GenesisConfig"]}];
implementors["runtime_eden"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_eden/struct.SessionKeys.html\" title=\"struct runtime_eden::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["runtime_eden::pallets_consensus::SessionKeys"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_eden/struct.GenesisConfig.html\" title=\"struct runtime_eden::GenesisConfig\">GenesisConfig</a>","synthetic":false,"types":["runtime_eden::GenesisConfig"]}];
implementors["runtime_main"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_main/struct.SessionKeys.html\" title=\"struct runtime_main::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["runtime_main::pallets_consensus::SessionKeys"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_main/struct.GenesisConfig.html\" title=\"struct runtime_main::GenesisConfig\">GenesisConfig</a>","synthetic":false,"types":["runtime_main::GenesisConfig"]}];
implementors["runtime_staking"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_staking/struct.SessionKeys.html\" title=\"struct runtime_staking::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["runtime_staking::pallets_consensus::SessionKeys"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.137/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"runtime_staking/struct.GenesisConfig.html\" title=\"struct runtime_staking::GenesisConfig\">GenesisConfig</a>","synthetic":false,"types":["runtime_staking::GenesisConfig"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()